@using OnePrice.Domain.Enums;
@using OnePrice.UI.Models.PostDTOs;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<PostDisplayDTO>
@{
	ViewData["Title"] = "Posts";
	string category = "";
	string search = "";

	if (ViewData.ContainsKey("Category") && ViewData["Category"] != null && !string.IsNullOrEmpty(ViewData["Category"].ToString()))
		category = ViewData["Category"].ToString();

	if (ViewData.ContainsKey("Search") && ViewData["Search"] != null && !string.IsNullOrEmpty(ViewData["Search"].ToString()))
		search = ViewData["Search"].ToString();

}

@{
	await Html.RenderPartialAsync("_SearchPartial", search);
}

@if (Model.Count() == 0)
{
	<h1>No posts match your search criteria</h1>
	<p>We couldn't find any posts that match your search term or category.</p>
	<a href="/">
		Return to the main page
	</a>
}


<div class="container-lg mt-5 col-md-12">

	@foreach (PostDisplayDTO p in Model)
	{
		<a asp-action="Post" asp-controller="Post" asp-route-id=@p.Id class="card-clickable">
			<div class="card mb-3 bg-white">
				<div class="row">

					<div class="col-md-4">
						<img src="@p.ImgPath" class="img-fluid rounded-start img200 ">
					</div>

					<div class="col-md-8">

						<div class="card-body">

							<div class="title-wrapper p-1">
								<h4 class="card-title col-md-4 overflow-hidden ">
									@p.Title
								</h4>
								<h4 class="col-md-4 fw-bold p-1">
									@p.Price @Enum.GetName(typeof(Currency), p.Currency)
								</h4>
							</div>

							<p class="card-text">
								<small class="text-muted p-1">
									@p.Day
									@p.Month
									@p.Year
								</small>
							</p>

						</div>

					</div>
				</div>
			</div>
		</a>
	}

</div>

<div class="justify-content-center align-items-center">
	<p>
		Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
	</p>
	@Html.PagedListPager(
	Model,
	page => Url.Action("Posts",
	new {
	page,
	category = ViewData["Category"],
	search = ViewData["Search"]
	}),
	PagedListRenderOptions.Classic
	)

</div>
