@using OnePrice.Domain.Enums;
@using OnePrice.UI.Models.PostDTOs;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<PostDisplayDTO>
@{
	ViewData["Title"] = "Posts";
	string category = "";
	string search = "";

	if (ViewData.ContainsKey("Category") && ViewData["Category"] != null && !string.IsNullOrEmpty(ViewData["Category"].ToString()))
		category = ViewData["Category"].ToString();

	if (ViewData.ContainsKey("Search") && ViewData["Search"] != null && !string.IsNullOrEmpty(ViewData["Search"].ToString()))
		search = ViewData["Search"].ToString();

}

@{
	await Html.RenderPartialAsync("_SearchPartial", search);
}

@if (Model.Count() == 0)
{
	<h1>No posts match your search criteria</h1>
	<p>We couldn't find any posts that match your search term or category.</p>
	<a href="/">
		Return to the main page
	</a>
}


<div class="container-lg mt-5 col-md-12">

	@foreach (PostDisplayDTO p in Model)
	{
		await Html.RenderPartialAsync("_LongPostPartial", p);
	}

</div>

<div class="justify-content-center align-items-center">
	<p>
		Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
	</p>
	@Html.PagedListPager(
	Model,
	page => Url.Action("Posts",
	new {
	page,
	category = ViewData["Category"],
	search = ViewData["Search"]
	}),
	PagedListRenderOptions.Classic
	)

</div>
